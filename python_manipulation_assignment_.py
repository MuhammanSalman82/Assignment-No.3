# -*- coding: utf-8 -*-
"""Python Manipulation Assignment .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EvCwOQ-KtG0lPK7fxYQiUPX6ZUytO6Ub

## **PYTHON LIST MANIPULATION ASSIGNMENT**
"""

#Q.1: BASIC LIST OPERATIONS
#----------------------------
#Q1 (a) Create a list named `fruits` containing the following items: "apple", "banana", "orange", "grape", "kiwi".

f_List =[" A p p l e  "," B a n a n a "," O r a n g e "," G r a p e "," K i w i "]
print(f_List)

#Q1(b) Add "peer"to the end of the list
f_List =[" A p p l e  "," B a n a n a "," O r a n g e "," G r a p e "," K i w i "]
f_List.append(" P e a r ")
print(f_List)

#Q1(c) Insert "Mango" at the 2nd position in the list.
f_List =[" A p p l e  "," B a n a n a "," O r a n g e "," G r a p e "," K i w i "]
f_List.insert(1," M a n g o ")
print(f_List)

#Q1(d) Insert "Mango" at the 2nd position in the list.
f_List =[" A p p l e  "," B a n a n a "," O r a n g e "," G r a p e "," K i w i "]
f_List.remove(" O r a n g e ")
print(f_List)

#Q2: SLICING & INDEXING
#-----------------------
#Q2.(a) Create a list name "Numbers" containing the interers from 0 to 9
num=[0,1,2,3,4,5,6,7,8,9]
print(num)

#Q2.(b) Print the element at index 3.
num=[0,1,2,3,4,5,6,7,8,9]
print(num[3])

#Q2.(c) Print a sublist containing the elements from index 2 to 6 (inclusive).
num=[0,1,2,3,4,5,6,7,8,9]
print(num[2:7])

#Q2.(d) Print the last threeelements using negativeindexing.
num=[0,1,2,3,4,5,6,7,8,9]
print(num[-3:])

#Q3. LIST COMPREHENSION
#-----------------------
#Q3.(a) Create a list named "squares" using a list comprehension that contains the squares of numbers from 1 to 10.
squares=[]
for x in range(1,11):
    squares.append(x**2)
print(squares)

#Q3.(b) Create a new list named" even squares" using a list comprehension that contains the squares of even numbers fron the nsquare list.

squares=[]
for x in range(1,11):
    squares.append(x**2)
print(squares)

even_squares=[]
for y in squares:
    if y%2==0:
        even_squares.append(y)
print(even_squares)

#Q4. LIST MANIPULATION
#----------------------
#Q4.(a) Create a list name "colors" containig the following items:"red","green","blue","yellow","purple".
colour=["red","green","blue","yellow","purple"]
print(colour)

#Q4.(b) Swap the first and last elements of the list.
colour=["red","green","blue","yellow","purple"]
print(colour)

s=""
s+=colour[-1]
colour[-1]=colour[0]
colour[0]=s
print(colour)

#Q4.(c) Reverse the order of the list.
colour=["red","green","blue","yellow","purple"]
print(colour)

print(colour[::-1])

#Q4.(d) Remove the second and third elements from the list.
colour=["red","green","blue","yellow","purple"]
print(colour)

colour.remove("green")
colour.remove("blue")
print(colour)

#Q5. ADVANCED SLICING
#---------------------
#Q5. (a)  Create a list named"letters" containg the letters from "a" to "j".
letters=["a","b","c","d","e","f","g","h","i","j"]
print(letters)

#Q5. (b)  Using Slicing, create a new list "first_half" containing the first half of the "letters" list.
letters=["a","b","c","d","e","f","g","h","i","j"]
print(letters)
first_half = letters[:len(letters) // 2]
print("First Half  :", first_half)

#Q5. (c) Using Slicing, createa new list "Last_three" containing the last three elementsof the "letters" list.
letters=["a","b","c","d","e","f","g","h","i","j"]
print(letters)
last_three=[]
last_three+=letters[-3:]
print("Last three Elements: ",last_three)

#Q6. NESTED LIST
#----------------
#Q6. (a) Create a nested list name "matrix" with the followinbg rows.
# [1,2,3] [4,5,6] [7,8,9]

matrix=[[1,2,3],[4,5,6],[7,8,9]]

#Q6. (b) Print the element in the secong row and third column.
matrix=[[1,2,3],[4,5,6],[7,8,9]]
print(matrix[1][2])

#Q6. (c) Use nested indexing to change the value at the second row and first column to 0.
matrix=[[1,2,3],[4,5,6],[7,8,9]]

matrix[1][0] = 0
print(matrix)